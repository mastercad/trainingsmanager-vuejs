###############################################################################
#                          Generated on phpdocker.io                          #
###############################################################################
version: '3.1'
services:
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '58001:8025'

    mysql:
        image: mysql:8.0
        working_dir: /application
        volumes:
            - '.:/application'
        environment:
            MYSQL_ROOT_PASSWORD: trainingsmanager-vuejs
            MYSQL_DATABASE: trainingsmanager-vuejs
            MYSQL_USER: trainingsmanager-vuejs
            MYSQL_PASSWORD: trainingsmanager-vuejs
        ports:
            - '58002:3306'

    mysql_tests:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: trainingsmanager-vuejs
            MYSQL_DATABASE: "trainingsmanager-vuejs_test"
            MYSQL_USER: "trainingsmanager-vuejs"
            MYSQL_PASSWORD: "trainingsmanager-vuejs"
        volumes:
        - ./.docker/mysql/utf8mb4.cnf:/etc/mysql/conf.d/utf8mb4.cnf:ro

    webserver:
        image: 'nginx:alpine'
        working_dir: /application
        volumes:
            - '.:/application'
            - './.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf'
        ports:
            - '58000:80'

    php-fpm:
        build: .docker/php-fpm
        working_dir: /application
#        ports:
#            - 9003:9003
        links:
          - mysql
          - mysql_tests
        volumes:
            - '.:/application'
            - './.docker/php-fpm/php-ini-overrides.ini:/etc/php/8.1/fpm/conf.d/99-overrides.ini'
            - './.docker/php-fpm/php-ini-overrides.ini:/etc/php/8.1/cli/conf.d/99-overrides.ini'

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        environment:
            PMA_HOST: mysql
            PMA_PORT: 3306
        ports:
            - 58003:80
        links:
            - mysql

  ###> doctrine/doctrine-bundle ###
    database:
      image: postgres:${POSTGRES_VERSION:-15}-alpine
      environment:
        POSTGRES_DB: ${POSTGRES_DB:-app}
        # You should definitely change the password in production
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
        POSTGRES_USER: ${POSTGRES_USER:-app}
      volumes:
        - database_data:/var/lib/postgresql/data:rw
        # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
        # - ./docker/db/data:/var/lib/postgresql/data:rw
  ###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
