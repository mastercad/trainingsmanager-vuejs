name: Quality Assurance
run-name: ${{ github.actor }} Quality Assurance
on: [push]
jobs:
  run-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build the stack
        run: docker compose up -d php-fpm mysql_tests

      - name: install composer dependencies
        run: docker compose exec php-fpm composer install

      - name: validate database schema
        run: |
          docker compose exec php-fpm php bin/console doctrine:database:drop -n --if-exists --force --env=test
          docker compose exec php-fpm php bin/console doctrine:database:create -n --if-not-exists --env=test
          docker compose exec php-fpm php bin/console doctrine:schema:create -n --env=test
          docker compose exec php-fpm php bin/console doctrine:migrations:migrate -n --allow-no-migration --env=test
          docker compose exec php-fpm php bin/console doctrine:schema:validate -v -n --env=test

      - name: install npm dependencies
        run: npm install

      - name: check js codestyles
        run: npm run lint

      - name: check php codestyles
        run: docker compose exec php-fpm php vendor/bin/phpcs

      - name: check lexik bundle configuration
        run: docker compose exec php-fpm php bin/console lexik:jwt:check-config

      - name: generate keypair for token generation in tests
        run: docker compose exec php-fpm php bin/console lexik:jwt:generate-keypair --overwrite -n

      - name: run frontend tests
        run: npm test

      - name: run phpunit tests
        run: docker compose exec php-fpm php bin/phpunit

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          gcov: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Make code coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: output/coverage.svg
          push_badge: false
          report: coverage/clover.xml
